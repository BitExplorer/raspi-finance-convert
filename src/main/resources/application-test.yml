server:
  port: ${SERVER_PORT}

spring:
  application:
    name: raspi-finance-convert
  profiles:
    active: prod

  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:postgresql://192.168.100.97:5432/finance_db
    username: henninb
    password: monday1
    driver-class-name: org.postgresql.Driver
    # testWhileIdle to persist the connection when idle for a long period of time
    tomcat:
      test-While-Idle: true
      validation-Query: SELECT 1
    platform: postgresql
    continue-On-Error: false
    # enable initialization-mode flag to always if you want to utilize data.sql and schema.sql
    #initialization-mode: always
    initialization-mode: never

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
  jpa:
    show-sql: false
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: ${HIBERNATE_DDL}
    properties:
      hibernate:
        jdbc:
          time_zone: UTC

logging:
  level:
    org:
      hibernate:
        SQL: WARN
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

custom:
  project:
    time-zone: ${TIMEZONE}
    input:
      file-path: ${INPUT_FILEPATH}
    output:
      file-path: ${OUTPUT_FILEPATH}
    excel-password: ${EXCEL_PASSWORD}
    camel-route:
      auto-Start-Route: ${CAMEL_ROUTE_ENABLED}
      json-Files-Input-Path: ${JSON_FILES_INPUT_PATH}
      excel-Files-Input-Path: ${EXCEL_FILES_INPUT_PATH}
      json-File-Reader-Route-Id: jsonFileReaderRoute
      excel-File-Reader-Route-Id: excelFileReaderRoute
      transaction-To-Database-Route-Id: transactionToDatabaseRoute
      json-File-Writer-Route-Id: jsonFileWriterRoute
      process-each-transaction: direct:processEachTransaction
      json-file-writer-route: direct:jsonFileWriterRoute

# ===============================
# = Camel
# ===============================
camel:
  springboot:
    name: RaspiFinance
  health.check.routes.enabled: false

# ===============================
# = Thymeleaf
# ===============================
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
#spring.thymeleaf.cache=false

#kebab-case '-' separated

management:
  endpoint:
    health:
      show-details: always

# management:
#   endpoints:
# #    beans:
# #      enabled: true
#     web:
#       exposure:
#         include: "*"
#   metrics:
# #    web:
# #      server:
# #        auto-time-requests: true
#     tags.host: hornsup
#     tags.environment: prod
#     tags.application: raspi-finance-convert
#     export:
#       influx:
#         enabled: false
#         auto-create-db: false
#         db: metrics
#         compressed: false
#         step: 1m
#         uri: http://hornsup::8086
#  health:
#    show-details: always
